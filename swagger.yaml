openapi: 3.0.3
info:
  title: Epic Marker Mobile API
  description: This is the API documentation for the Epic Market mobile backend
  contact:
    email: support@epicmarket.in
  version: 1.0.0
servers:
  - url: https://api.epicmarket.in/mobile

paths:
  /branches:
    get:
      tags:
        - Branch
      summary: Get all branches
      parameters:
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/sizeParam"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Branch"
                  page:
                    type: integer
                    default: 1
                  size:
                    type: integer
                    default: 10
                  total:
                    type: integer
                    default: 100
        "422":
          description: Validation exception

  /branches/{branch_id}:
    patch:
      tags:
        - Branch
      summary: Update a branch status
      parameters:
        - in: path
          name: branch_id
          required: true
          schema:
            type: string
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_open:
                  type: boolean
                  default: true
      responses:
        "200":
          description: Successful operation
        "404":
          description: Branch not found

  /branches/{branch_id}/menu:
    get:
      tags:
        - Branch
        - Menu
      parameters:
        - in: path
          name: branch_id
          required: true
          schema:
            type: string
            example: br1
        - in: query
          name: search_term
          schema:
            type: string
            example: product 1
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/sizeParam"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MenuProduct"
                  page:
                    type: integer
                    default: 1
                  size:
                    type: integer
                    default: 10
                  total:
                    type: integer
                    default: 100

  /orders:
    get:
      tags:
        - Order
      summary: Get all orders
      parameters:
        - in: query
          name: branch_id
          schema:
            type: integer
        - in: query
          name: search_term
          schema:
            type: integer
        - in: query
          name: status
          schema:
            $ref: "#/components/schemas/OrderStatus"
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/sizeParam"

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
                  page:
                    type: integer
                    default: 1
                  size:
                    type: integer
                    default: 10
                  total:
                    type: integer
                    default: 100

        "422":
          description: Validation exception

  /orders/{order_id}:
    get:
      tags:
        - Order
      summary: Get details of an order
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
            example: br120240901
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDetail"
    patch:
      tags:
        - Order
      summary: Update order status
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
            example: br120240901
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: "#/components/schemas/OrderStatus"
      responses:
        "200":
          description: Successful operation
        "404":
          description: Order not found

  /order-status-options:
    get:
      tags:
        - Option Sets
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Option"

components:
  parameters:
    pageParam:
      in: query
      name: page
      schema:
        type: integer
        default: 1
    sizeParam:
      in: query
      name: size
      schema:
        type: integer
        default: 10

  schemas:
    Option:
      type: object
      properties:
        text:
          type: string
          example: Option 1
        value:
          type: string
          example: 1

    OrderStatus:
      type: string
      enum:
        - ordered
        - packing
        - readyForPickUp
        - completed
        - cancelled

    OrderBranch:
      type: object
      properties:
        id:
          type: string
          example: br1
        name:
          type: string
          example: Branch 1

    OrderCustomer:
      type: object
      properties:
        id:
          type: string
          example: cust-1
        username:
          type: string
          example: janedoe
        name:
          type: string
          example: Jane Doe

    OrderPeakItem:
      type: object
      properties:
        id:
          type: string
          example: pr1
        name:
          type: string
          example: Product A
        quantity:
          type: integer
          default: 2
        price:
          type: number
          example: 49.9
        total_price:
          type: number
          example: 199.8

    Branch:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Branch 1
        is_open:
          type: boolean
          example: true

    Order:
      type: object
      properties:
        id:
          type: string
          example: br120240901
        status:
          $ref: "#/components/schemas/OrderStatus"
        payment_mode:
          type: string
          example: cash
        ordered_at:
          type: string
          format: date-time
        branch:
          $ref: "#/components/schemas/OrderBranch"
        customer:
          $ref: "#/components/schemas/OrderCustomer"
        items_peak:
          type: array
          description: Only return the first 2 items
          items:
            $ref: "#/components/schemas/OrderPeakItem"
        items_count:
          type: integer
          example: 12
        total_price:
          type: integer
          example: 1032.5

    OrderDetail:
      type: object
      properties:
        id:
          type: string
          example: br120240901
        status:
          $ref: "#/components/schemas/OrderStatus"
        payment_mode:
          type: string
          example: cash
        ordered_at:
          type: string
          format: date-time
        branch:
          $ref: "#/components/schemas/OrderBranch"
        customer:
          $ref: "#/components/schemas/OrderCustomer"
        items:
          type: array
          description: Return details of all items
          items:
            $ref: "#/components/schemas/OrderPeakItem"
        items_count:
          type: integer
        total_price:
          type: integer

    MenuProduct:
      type: object
      properties:
        id:
          type: string
          example: pr1
        name:
          type: string
          example: Product 1
        description:
          type: string
          example: This is Product 1
        is_recommended:
          type: boolean
          example: true
        in_stock:
          type: boolean
          example: true
        price:
          type: number
          example: 29.9
        thumbnail:
          type: string
          example: key-of-the-thumbnail
